{
	"info": {
		"_postman_id": "9c395d44-e722-4f41-a8c8-5961a88b47c0",
		"name": "Visual Programming-Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "New workflow",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f36bfdc4-a83f-4f7f-a91e-af704ea64c2e",
						"exec": [
							"const response = pm.response.json()",
							"",
							"pm.environment.set('graph', response)",
							"",
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"Body of response contains all values\", function() {",
							"    pm.response.to.have.body(",
							"    {",
							"    \"directed\": true,",
							"    \"multigraph\": false,",
							"    \"graph\": {},",
							"    \"nodes\": [],",
							"    \"links\": []",
							"    })",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8000/workflow/new",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"workflow",
						"new"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add ReadCsvNode (1)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f9268535-3eaa-4925-91af-626cfb6fda41",
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"Body of response contains all values\", function() {",
							"    pm.response.to.have.body(",
							"    {\"message\": \"Added new node to graph with id: 1\"})",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": null,\n    \"node_id\": \"1\",\n    \"node_type\": \"IONode\",\n    \"node_key\": \"ReadCsvNode\",\n    \"options\": {\n    \t\"filepath_or_buffer\": \"/tmp/sample.csv\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/node/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"node",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Add PivotNode (2)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7a284d90-0a1a-4f77-8dab-70f63b09f031",
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"Body of response contains all values\", function() {",
							"    pm.response.to.have.body(",
							"    {\"message\": \"Added new node to graph with id: 2\"})",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": null,\n    \"node_id\": \"2\",\n    \"node_type\": \"ManipulationNode\",\n    \"node_key\": \"PivotNode\",\n    \"options\": {\n    \t\"index\": [\"product\"],\n    \t\"aggfunc\": \"count\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/node/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"node",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Add FilterNode (3)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f9268535-3eaa-4925-91af-626cfb6fda41",
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"Body of response contains all values\", function() {",
							"    pm.response.to.have.body(",
							"    {\"message\": \"Added new node to graph with id: 3\"})",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": null,\n    \"node_id\": \"3\",\n    \"node_type\": \"ManipulationNode\",\n    \"node_key\": \"FilterNode\",\n    \"options\": {\n    \t\"items\": [\"country\",\"date\"]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/node/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"node",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Add WriteCsvNode (4)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b64dd18e-c016-45df-ac55-df01b2a61667",
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"Body of response contains all values\", function() {",
							"    pm.response.to.have.body(",
							"    {\"message\": \"Added new node to graph with id: 4\"})",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": null,\n    \"node_id\": \"4\",\n    \"node_type\": \"IONode\",\n    \"node_key\": \"WriteCsvNode\",\n    \"options\": {\n    \t\"path_or_buf\": \"/tmp/sample_out.csv\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/node/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"node",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Add WriteCsvNode (5)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b64dd18e-c016-45df-ac55-df01b2a61667",
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"Body of response contains all values\", function() {",
							"    pm.response.to.have.body(",
							"    {\"message\": \"Added new node to graph with id: 5\"})",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": null,\n    \"node_id\": \"5\",\n    \"node_type\": \"IONode\",\n    \"node_key\": \"WriteCsvNode\",\n    \"options\": {\n    \t\"path_or_buf\": \"/tmp/sample_out.csv\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/node/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"node",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Add ReadCsvNode (6)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f9268535-3eaa-4925-91af-626cfb6fda41",
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": null,\n    \"node_id\": \"6\",\n    \"node_type\": \"IONode\",\n    \"node_key\": \"ReadCsvNode\",\n    \"options\": {\n    \t\"filepath_or_buffer\": \"/tmp/sample.csv\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/node/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"node",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Add edge (1 to 2)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6bf233ab-56e1-489d-ad58-d5680ba01d09",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"Body of response contains all values\", function() {",
							"    pm.response.to.have.body({",
							"    \"edge_added\": [",
							"        \"1\",",
							"        \"2\"",
							"    ]",
							"}",
							"   )",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "node_from_id",
							"value": "1",
							"type": "text",
							"disabled": true
						},
						{
							"key": "node_to_id",
							"value": "2",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{environment}}/node/edge/1/2",
					"host": [
						"{{environment}}"
					],
					"path": [
						"node",
						"edge",
						"1",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add edge (2 to 3)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6bf233ab-56e1-489d-ad58-d5680ba01d09",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"Body of response contains all values\", function() {",
							"    pm.response.to.have.body({",
							"    \"edge_added\": [",
							"        \"2\",",
							"        \"3\"",
							"    ]",
							"}",
							"   )",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "node_from_id",
							"value": "1",
							"type": "text",
							"disabled": true
						},
						{
							"key": "node_to_id",
							"value": "2",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{environment}}/node/edge/2/3",
					"host": [
						"{{environment}}"
					],
					"path": [
						"node",
						"edge",
						"2",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add edge (3 to 4)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6bf233ab-56e1-489d-ad58-d5680ba01d09",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"Body of response contains all values\", function() {",
							"    pm.response.to.have.body({",
							"    \"edge_added\": [",
							"        \"3\",",
							"        \"4\"",
							"    ]",
							"}",
							"   )",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "node_from_id",
							"value": "1",
							"type": "text",
							"disabled": true
						},
						{
							"key": "node_to_id",
							"value": "2",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{environment}}/node/edge/3/4",
					"host": [
						"{{environment}}"
					],
					"path": [
						"node",
						"edge",
						"3",
						"4"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add edge (4 to 6)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6bf233ab-56e1-489d-ad58-d5680ba01d09",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"Body of response contains all values\", function() {",
							"    pm.response.to.have.body({",
							"    \"edge_added\": [",
							"        \"4\",",
							"        \"6\"",
							"    ]",
							"}",
							"   )",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "node_from_id",
							"value": "1",
							"type": "text",
							"disabled": true
						},
						{
							"key": "node_to_id",
							"value": "2",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{environment}}/node/edge/4/6",
					"host": [
						"{{environment}}"
					],
					"path": [
						"node",
						"edge",
						"4",
						"6"
					]
				}
			},
			"response": []
		},
		{
			"name": "Execute node (1)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "50e22420-fbf6-43a4-8e7f-593042c33747",
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{environment}}/node/1/execute",
					"host": [
						"{{environment}}"
					],
					"path": [
						"node",
						"1",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "Execute node (2)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "01c42618-a9e8-4c20-875d-964513987320",
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{environment}}/node/2/execute",
					"host": [
						"{{environment}}"
					],
					"path": [
						"node",
						"2",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "Execute node (3)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "01c42618-a9e8-4c20-875d-964513987320",
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{environment}}/node/3/execute",
					"host": [
						"{{environment}}"
					],
					"path": [
						"node",
						"3",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "Execute node (4)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "01c42618-a9e8-4c20-875d-964513987320",
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{environment}}/node/4/execute",
					"host": [
						"{{environment}}"
					],
					"path": [
						"node",
						"4",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "Execute node (5)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "01c42618-a9e8-4c20-875d-964513987320",
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(500)",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{environment}}/node/5/execute",
					"host": [
						"{{environment}}"
					],
					"path": [
						"node",
						"5",
						"execute"
					]
				}
			},
			"response": []
		},
		{
			"name": "Execute node (6)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "01c42618-a9e8-4c20-875d-964513987320",
						"exec": [
							"pm.test(\"Status code is 500\", function() {",
							"    pm.response.to.have.status(500)",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{environment}}/node/6/execute",
					"host": [
						"{{environment}}"
					],
					"path": [
						"node",
						"6",
						"execute"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}